###============================================================
##   skhd Configuration
#==============================================================
# https://github.com/koekeishiya/skhd
# skhd is simple hotkey daemon. This is not the easiest and most intuitive, but
# effective and efficient, which works just as intended for most use cases.

###========================================
##   Yabai Configuration
#==========================================

###----------------------------------------
##   Start / Stop
#------------------------------------------
lctrl + lalt - escape : echo "Toggling yabai..."; \
    if launchctl list org.nix-community.home.yabai | grep -q "PID"; then; \
        echo "Stopping yabai"; \
        launchctl stop org.nix-community.home.yabai; \
    else; \
        echo "Starting yabai"; \
        launchctl start org.nix-community.home.yabai; \
    fi

###----------------------------------------
##   Window Size
#------------------------------------------
# A lot of configs coming from:
# https://github.com/FelixKratz/dotfiles/blob/master/.config/skhd/skhdrc

# Detach the window from tiling.
lctrl + lalt - f10    : yabai -m window --toggle float
# Maximise the window -- first try to fill the entire screen based on grid of
# X:Y:Xoff:Yoff:W:H, which would fail when the window is managed by yabai. As a
# fall back, use the "--toggle zoom-fullscreen", which would make the fullscreen
# even when managed.
lctrl + lalt - return : yabai -m window --grid 1:1:0:0:1:1 > /dev/null || yabai -m window --toggle zoom-fullscreen

# Location aware resize so that it does the most natural shrink / expand.
lctrl + lalt - left   : yabai -m window --resize right:-100:0 > /dev/null || yabai -m window --resize left:-100:0 > /dev/null
lctrl + lalt - right  : yabai -m window --resize right:100:0 > /dev/null || yabai -m window --resize left:100:0 > /dev/null
lctrl + lalt - up     : yabai -m window --resize bottom:0:-100 > /dev/null || yabai -m window --resize top:0:-100 > /dev/null
lctrl + lalt - down   : yabai -m window --resize bottom:0:100 > /dev/null || yabai -m window --resize top:0:100 > /dev/null

###----------------------------------------
##   Window Position
#------------------------------------------
# Cycle through window setup (clockwise)
lctrl + lalt - f9     : yabai -m space --rotate 270 > /dev/null

# Move window to space
lctrl + lalt - 1      : yabai -m window --space 1
lctrl + lalt - 2      : yabai -m window --space 2
lctrl + lalt - 3      : yabai -m window --space 3
lctrl + lalt - 4      : yabai -m window --space 4
lctrl + lalt - 5      : yabai -m window --space 5

# Cycle through focused window
lctrl + lalt - tab [
    # Disable mapping for some applications that uses Ctrl + Option + Tab
    "Emacs" ~
    # "Arc" ~ # Disabling Arc for now

    *: yabai -m window --focus next > /dev/null || yabai -m window --focus first > /dev/null
]

###========================================
##   Sketchybar Configuration
#==========================================
rshift + ralt - space : sketchybar --bar hidden=toggle
# rshift + rcmd - space : sketchybar --remove '/.*/' && sh -c 'export CONFIG_DIR=$HOME/.config/sketchybar && $CONFIG_DIR/sketchybarrc'


###========================================
##   Other Configurations
#==========================================
# Write a quick todo on Emacs
# - Set it so that it does not bind when using Emacs
lctrl + lalt - n [
    "Emacs" ~
    *: emacsclient --eval '(rytswd/org-roam-capture-todo :keys "m")'; \
        yabai -m window --focus \
            "$(yabai -m query --windows | jq -r 'map(select(."app"=="Emacs")) | .[0].id')"
]
# Focus on Emacs - '0x32' is for backtick (`)
# - Set it so that it does not bind when using Emacs
lalt - 0x32 [
    "Emacs" ~
    *: yabai -m window --focus \
        "$(yabai -m query --windows | jq -r 'map(select(."app"=="Emacs")) | .[0].id')"
]
