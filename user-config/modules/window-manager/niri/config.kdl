// All the configs are pulled in from Org Mode file. Check out README.org.

input {
    keyboard {
        xkb {
            layout "us,jp"
            variant "dvorak,"
            options "grp:win_space_toggle"
        }
        repeat-rate 75
        repeat-delay 195
        track-layout "global"
    }
    touchpad {
        tap
        dwt
        natural-scroll
        scroll-method "two-finger"
        accel-speed 0.2
        accel-profile "adaptive"
    }
    mouse {
        
    }
}

output "eDP-1" {
    mode "2880x1800@120.000"
    scale 1.666667
    transform "normal"
    position x=1920 y=0
}
output "eDP-2" {
    mode "2880x1800@120.000"
    scale 1.666667
    transform "normal"
    position x=1920 y=0
}

layout {
    focus-ring {
        off
    }
    border {
        width 3
        
        active-gradient \
            to="#0081AF" \
            from="#F29940" \
            angle=75
            // relative-to="workspace-view"
        inactive-gradient \
            to="#808080" \
            from="#505050" \
            angle=45
            // relative-to="workspace-view"
    }
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.75
        proportion 0.95
    }
    tab-indicator {
        width 8
        gap 8
        length total-proportion=0.7
        corner-radius 7
        gaps-between-tabs 8
        position "top"
        place-within-column
        active-gradient to="#45CB85" from="#344966" angle=75
        inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }
    shadow {
        on
    }
    gaps 16
    center-focused-column "on-overflow"
    default-column-width {}
}

animations {
    // Slow down all animations by this factor.
    // Values below 1 speed them up instead.
    // slowdown 3.0
}

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

cursor {
    xcursor-theme "breeze_cursors"
    xcursor-size  32
    hide-when-typing
}

hotkey-overlay {
    skip-at-startup
}

workspace "coding"

workspace "communication"

workspace "perf"

window-rule {
    opacity 0.95
    clip-to-geometry true
    geometry-corner-radius 7
    draw-border-with-background false
}

window-rule {
    match app-id="vivaldi"
    match app-id="brave"
    match app-id="firefox"
    match app-id="chromium"
    match app-id="nyxt"
    match app-id="zen"
    opacity 1.0
}

window-rule {
    match app-id="emacs"
    default-column-width { proportion 0.9; }
}

window-rule {
    match app-id="emacs" title="emacs-ephemeral-popup"
    open-floating true
    default-floating-position x=32 y=32 relative-to="bottom-right"
}

window-rule {
    match app-id="Slack"
    match app-id="vesktop"
    match app-id="signal"
    open-on-workspace "communication"
}

// Open the Firefox picture-in-picture window at the bottom-left corner of the screen
// with a small gap.
window-rule {
    // Firefox
    match app-id="firefox$" title="^Picture-in-Picture$"
    // Zen
    match app-id="zen" title="^Picture-in-Picture$"
    // Vivaldi
    match title="^Picture in picture$"

    open-floating true
    default-column-width { fixed 480; }
    default-window-height { fixed 270; }
    default-floating-position x=32 y=32 relative-to="bottom-right"
}

window-rule {
    // Vivaldi
    match title="^Meet "

    open-floating true
    default-column-width { fixed 240; }
    default-window-height { fixed 320; }
    default-floating-position x=32 y=32 relative-to="bottom-right"
}

window-rule {
    match app-id="Zoom Workplace" title=".*(menu).*"

    open-floating true
    open-focused true
    min-width 250
    default-floating-position x=32 y=32 relative-to="bottom-right"
}

window-rule {
    match app-id="Zoom Workplace" title=".*(popup).*"

    open-floating true
    open-focused true
    default-column-width { fixed 300; }
    default-window-height { fixed 320; }
    default-floating-position x=32 y=32 relative-to="bottom-right"
}

window-rule {
    match app-id="Zoom Workplace" title="zoom"

    open-floating true
    default-floating-position x=0 y=32 relative-to="top"
}

window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }

    border {
        inactive-color "#7d0d2d"
    }

    shadow {
        color "#7d0d2d70"
    }

    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}

spawn-at-startup "swww-daemon"

spawn-at-startup "sh" "-c" "ags -c ~/.config/ags-notification/config.js -b notification"

spawn-at-startup "sh" "-c" "clipse -listen"

spawn-at-startup "sh" "-c" "wl-paste --watch cliphist store"

spawn-at-startup "maestral" "start" // Hack

environment {
    NIXOS_OZONE_WL "1"
    BEMOJI_PICKER_CMD r#"rofi -dmenu -no-show-icons"#
    XMODIFIERS r#"@im=fcitx"#
}

binds {
    Alt+Space         { spawn "rofi" "-show" "drun"; }
    Super+Shift+Space { spawn "rofi" "-show" "window"; }
    Shift+XF86Launch1 { spawn "ghostty"; }
    Super+Shift+F12 { spawn "ghostty" "-e" "clipse"; }
    Super+Alt+K   { spawn "sh" "-c" \
                    "cliphist list | fuzzel -d | cliphist decode | wl-copy" \
                    ; } // Dvorak V
    Super+Alt+Backslash { spawn "sh" "-c" "bemoji -c -n" ; }
    Super+Shift+Backslash { spawn "swaync-client" "-t" "-sw" ; }
    Super+Alt+N   { spawn "swaylock"; } // Dvorak L
    Super+Shift+M { quit; }
    Super+Apostrophe { close-window; } // Super + Q on Dvorak

    Super+Tab                   { focus-window-down-or-column-right; }
    Super+Shift+Tab             { focus-window-up-or-column-left; }
    Super+Grave                 { switch-focus-between-floating-and-tiling; }
    
    // NOTE: These key bindings are designed so that they are difficult to use,
    // and should not conflict with other key bindings. In order to use this
    // in real scenario, I would need key remapping solutions like Xremap.
    Ctrl+Shift+Alt+Super+Left   { focus-column-left; }
    Ctrl+Shift+Alt+Super+Kp_Left   { focus-column-left; }
    Ctrl+Shift+Alt+Super+Right  { focus-column-right; }
    Ctrl+Shift+Alt+Super+Kp_Right  { focus-column-right; }
    Ctrl+Shift+Alt+Super+Down   { focus-window-or-workspace-down; }
    Ctrl+Shift+Alt+Super+Up     { focus-window-or-workspace-up; }
    // These are somewhat easy alternative when remap is not working for any
    // reason.
    Ctrl+Shift+Home             { focus-column-left; }
    Ctrl+Shift+End              { focus-column-right; }
    // Ctrl+Shift+Next             { focus-workspace-down; }
    // Ctrl+Shift+Prior            { focus-workspace-up; }
    
    Ctrl+Alt+1                  { focus-workspace 1; }
    Ctrl+Alt+2                  { focus-workspace 2; }
    Ctrl+Alt+3                  { focus-workspace 3; }
    Ctrl+Alt+4                  { focus-workspace 4; }
    Ctrl+Alt+5                  { focus-workspace 5; }
    Ctrl+Alt+6                  { focus-workspace 6; }
    Ctrl+Alt+7                  { focus-workspace 7; }
    Ctrl+Alt+8                  { focus-workspace 8; }
    Ctrl+Alt+9                  { focus-workspace 9; }
    // NOTE: These key bindings are designed so that they are difficult to use,
    // and should not conflict with other key bindings. In order to use this
    // in real scenario, I would need key remapping solutions like Xremap.
    Ctrl+Shift+Alt+Left     { set-column-width "-5%"; }
    Ctrl+Shift+Alt+Right    { set-column-width "+5%"; }
    // Currently not used
    // Ctrl+Shift+Alt+Down   { set-window-height "+5%"; }
    // Ctrl+Shift+Alt+Up     { set-window-height "-5%"; }
    Ctrl+Alt+Minus          { set-window-height "-5%"; }
    Ctrl+Alt+Equal          { set-window-height "+5%"; }
    
    Ctrl+Alt+Return         { maximize-column; }
    Ctrl+Alt+Shift+F        { fullscreen-window; }
    F11                     { fullscreen-window; }
    Shift+F11               { toggle-windowed-fullscreen; }
    Ctrl+Alt+C              { center-column; }
    Ctrl+Alt+Space          { switch-preset-column-width; }
    // Mod+Shift+R { reset-window-height; }
    // NOTE: These key bindings are designed so that they are difficult to use,
    // and should not conflict with other key bindings. In order to use this
    // in real scenario, I would need key remapping solutions like Xremap.
    Ctrl+Shift+Super+Left   { move-column-left; }
    Ctrl+Shift+Super+Right  { move-column-right; }
    Ctrl+Shift+Super+Down   { move-window-down-or-to-workspace-down; }
    Ctrl+Shift+Super+Up     { move-window-up-or-to-workspace-up; }
    Ctrl+Shift+Super+H      { consume-or-expel-window-left; }
    Ctrl+Shift+Super+L      { consume-or-expel-window-right; }
    // Make windows in the same column into tabbed display
    Ctrl+Shift+Super+T      { toggle-column-tabbed-display; }
    Ctrl+Shift+Super+F      { toggle-window-floating; }

    Ctrl+Super+WheelScrollDown cooldown-ms=150 { focus-workspace-down; }
    Ctrl+Super+WheelScrollUp   cooldown-ms=150 { focus-workspace-up; }
    Ctrl+Super+WheelScrollRight                { focus-column-right; }
    Ctrl+Super+WheelScrollLeft                 { focus-column-left; }

    XF86AudioRaiseVolume allow-when-locked=true \
                         { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05+"; }
    XF86AudioLowerVolume allow-when-locked=true \
                         { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05-"; }
    Shift+XF86AudioRaiseVolume allow-when-locked=true \
                         { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SOURCE@" "0.05+"; }
    Shift+XF86AudioLowerVolume allow-when-locked=true \
                         { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SOURCE@" "0.05-"; }
    XF86AudioMute        allow-when-locked=true \
                         { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true \
                         { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    
    XF86MonBrightnessUp  { spawn "sh" "-c" "brightnessctl -d \"amdgpu_bl*\" set 5%+" ; }
    XF86MonBrightnessDown { spawn "sh" "-c" "brightnessctl -d \"amdgpu_bl*\" set 5%-" ; }
    
    Super+Shift+2           { screenshot; }
    Super+Shift+3           { screenshot-screen; }
    // Super+Shift+4           { screenshot-window; }
    Super+Shift+4           { spawn "sh" "-c" "grim -g \"$(slurp)\" - 2>/dev/null | swappy -f - 2>/dev/null"; }
    Print                   { screenshot; }
    Ctrl+Print              { screenshot-screen; }
    Alt+Print               { screenshot-window; }
}
